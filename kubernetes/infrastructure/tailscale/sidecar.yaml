# Simple Tailscale Integration - Much Simpler Alternative!
# This approach uses a Tailscale sidecar container instead of the complex operator

# Updated hello-app deployment with Tailscale sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-app
  namespace: applications
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-app
  template:
    metadata:
      labels:
        app: hello-app
    spec:
      serviceAccountName: default
      containers:
        # Your existing hello-app container
        - name: hello-app
          image: gcr.io/google-samples/hello-app:1.0
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
        # Simple Tailscale sidecar - this is the magic!
        - name: tailscale
          image: tailscale/tailscale:latest
          env:
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth
                  key: TS_AUTHKEY
            - name: TS_SERVE_CONFIG
              value: |
                {
                  "TCP": {
                    "443": {
                      "HTTPS": true
                    },
                    "80": {
                      "HTTP": true
                    }
                  },
                  "Web": {
                    "hello-app-k3s:443": {
                      "Handlers": {
                        "/": {
                          "Proxy": "http://127.0.0.1:8080"
                        }
                      }
                    }
                  }
                }
            - name: TS_HOSTNAME
              value: hello-app-k3s
            - name: TS_STATE_DIR
              value: /var/lib/tailscale
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - name: tailscale-state
              mountPath: /var/lib/tailscale
      volumes:
        - name: tailscale-state
          emptyDir: {}
---
# Simple ClusterIP service (no LoadBalancer needed!)
apiVersion: v1
kind: Service
metadata:
  name: hello-app-service
  namespace: applications
spec:
  selector:
    app: hello-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  # Much simpler than LoadBalancer!
  type: ClusterIP
